=========================================================================
ReadRequest test: empty
=========================================================================

--- PI (Input):

--- PI is invalid/unsupported:
INVALID_ARGUMENT: Device ID missing.

=========================================================================
ReadRequest test: no entities
=========================================================================

--- PI (Input):
device_id: 10

--- PI is invalid/unsupported:
UNIMPLEMENTED: Only wildcard reads of all table entries are supported. Only 1 entity is supported. Found 0 entities in read request.

=========================================================================
ReadRequest test: wrong entities
=========================================================================

--- PI (Input):
device_id: 10
entities {
  action_profile_member {
  }
}

--- PI is invalid/unsupported:
UNIMPLEMENTED: Only wildcard reads of all table entries are supported. Found an entity that is not a table entry.

=========================================================================
ReadRequest test: multiple table entries
=========================================================================

--- PI (Input):
device_id: 10
entities {
  table_entry {
  }
}
entities {
  table_entry {
  }
}

--- PI is invalid/unsupported:
UNIMPLEMENTED: Only wildcard reads of all table entries are supported. Only 1 entity is supported. Found 2 entities in read request.

=========================================================================
ReadRequest test: no meter, no counter
=========================================================================

--- PD (Input):
device_id: 10

--- IR:
device_id: 10

--- PI:
device_id: 10
entities {
  table_entry {
  }
}


=========================================================================
ReadRequest test: meter, no counter
=========================================================================

--- PD (Input):
device_id: 10
read_meter_configs: true

--- IR:
device_id: 10
read_meter_configs: true

--- PI:
device_id: 10
entities {
  table_entry {
    meter_config {
    }
  }
}


=========================================================================
ReadRequest test: no meter, counter
=========================================================================

--- PD (Input):
device_id: 10
read_counter_data: true

--- IR:
device_id: 10
read_counter_data: true

--- PI:
device_id: 10
entities {
  table_entry {
    counter_data {
    }
  }
}


=========================================================================
ReadResponse test: wrong entity
=========================================================================

--- PI (Input):
entities {
  action_profile_member {
  }
}

--- PI is invalid/unsupported:
UNIMPLEMENTED: Only table entries are supported in ReadResponse.

=========================================================================
ReadResponse test: valid ternary table
=========================================================================

--- PD (Input):
table_entries {
  ternary_table {
    match {
      normal {
        value: "0x52"
        mask: "0x273"
      }
    }
    action {
      action3 {
        arg1: "0x23"
        arg2: "0x251"
      }
    }
    priority: 32
  }
}

--- IR:
table_entries {
  table_name: "ternary_table"
  matches {
    name: "normal"
    ternary {
      value {
        hex_str: "0x52"
      }
      mask {
        hex_str: "0x273"
      }
    }
  }
  priority: 32
  action {
    name: "action3"
    params {
      name: "arg1"
      value {
        hex_str: "0x23"
      }
    }
    params {
      name: "arg2"
      value {
        hex_str: "0x251"
      }
    }
  }
}

--- PI:
entities {
  table_entry {
    table_id: 33554435
    match {
      field_id: 1
      ternary {
        value: "R"
        mask: "\002s"
      }
    }
    action {
      action {
        action_id: 16777219
        params {
          param_id: 1
          value: "#"
        }
        params {
          param_id: 2
          value: "\002Q"
        }
      }
    }
    priority: 32
  }
}


=========================================================================
ReadResponse test: multiple tables
=========================================================================

--- PD (Input):
table_entries {
  ternary_table {
    match {
      normal {
        value: "0x52"
        mask: "0x273"
      }
    }
    action {
      action3 {
        arg1: "0x23"
        arg2: "0x251"
      }
    }
    priority: 32
  }
}
table_entries {
  ternary_table {
    match {
      normal {
        value: "0x52"
        mask: "0x273"
      }
    }
    action {
      action3 {
        arg1: "0x23"
        arg2: "0x251"
      }
    }
    priority: 32
  }
}

--- IR:
table_entries {
  table_name: "ternary_table"
  matches {
    name: "normal"
    ternary {
      value {
        hex_str: "0x52"
      }
      mask {
        hex_str: "0x273"
      }
    }
  }
  priority: 32
  action {
    name: "action3"
    params {
      name: "arg1"
      value {
        hex_str: "0x23"
      }
    }
    params {
      name: "arg2"
      value {
        hex_str: "0x251"
      }
    }
  }
}
table_entries {
  table_name: "ternary_table"
  matches {
    name: "normal"
    ternary {
      value {
        hex_str: "0x52"
      }
      mask {
        hex_str: "0x273"
      }
    }
  }
  priority: 32
  action {
    name: "action3"
    params {
      name: "arg1"
      value {
        hex_str: "0x23"
      }
    }
    params {
      name: "arg2"
      value {
        hex_str: "0x251"
      }
    }
  }
}

--- PI:
entities {
  table_entry {
    table_id: 33554435
    match {
      field_id: 1
      ternary {
        value: "R"
        mask: "\002s"
      }
    }
    action {
      action {
        action_id: 16777219
        params {
          param_id: 1
          value: "#"
        }
        params {
          param_id: 2
          value: "\002Q"
        }
      }
    }
    priority: 32
  }
}
entities {
  table_entry {
    table_id: 33554435
    match {
      field_id: 1
      ternary {
        value: "R"
        mask: "\002s"
      }
    }
    action {
      action {
        action_id: 16777219
        params {
          param_id: 1
          value: "#"
        }
        params {
          param_id: 2
          value: "\002Q"
        }
      }
    }
    priority: 32
  }
}


=========================================================================
Update test: empty
=========================================================================

--- PI (Input):

--- PI is invalid/unsupported:
UNIMPLEMENTED: Only table entries are supported in Update.

=========================================================================
Update test: missing type
=========================================================================

--- PI (Input):
entity {
  table_entry {
  }
}

--- PI is invalid/unsupported:
INVALID_ARGUMENT: Update type should be specified.

=========================================================================
Update test: wrong entity
=========================================================================

--- PI (Input):
type: INSERT
entity {
  action_profile_member {
  }
}

--- PI is invalid/unsupported:
UNIMPLEMENTED: Only table entries are supported in Update.

=========================================================================
Update test: missing type
=========================================================================

--- PD (Input):
table_entry {
  ternary_table {
    match {
      normal {
        value: "0x52"
        mask: "0x273"
      }
    }
    action {
      action3 {
        arg1: "0x23"
        arg2: "0x251"
      }
    }
    priority: 32
  }
}

--- PD is invalid/unsupported (detected when translating IR to PI):
Update type should be specified.
=========================================================================
Update test: valid ternary table
=========================================================================

--- PD (Input):
type: MODIFY
table_entry {
  ternary_table {
    match {
      normal {
        value: "0x52"
        mask: "0x273"
      }
    }
    action {
      action3 {
        arg1: "0x23"
        arg2: "0x251"
      }
    }
    priority: 32
  }
}

--- IR:
type: MODIFY
table_entry {
  table_name: "ternary_table"
  matches {
    name: "normal"
    ternary {
      value {
        hex_str: "0x52"
      }
      mask {
        hex_str: "0x273"
      }
    }
  }
  priority: 32
  action {
    name: "action3"
    params {
      name: "arg1"
      value {
        hex_str: "0x23"
      }
    }
    params {
      name: "arg2"
      value {
        hex_str: "0x251"
      }
    }
  }
}

--- PI:
type: MODIFY
entity {
  table_entry {
    table_id: 33554435
    match {
      field_id: 1
      ternary {
        value: "R"
        mask: "\002s"
      }
    }
    action {
      action {
        action_id: 16777219
        params {
          param_id: 1
          value: "#"
        }
        params {
          param_id: 2
          value: "\002Q"
        }
      }
    }
    priority: 32
  }
}


=========================================================================
WriteRequest test: invalid role_id
=========================================================================

--- PI (Input):
role_id: 1

--- PI is invalid/unsupported:
INVALID_ARGUMENT: Only the default role is supported, but got role ID 1instead.

=========================================================================
WriteRequest test: invalid atomicity
=========================================================================

--- PI (Input):
atomicity: ROLLBACK_ON_ERROR

--- PI is invalid/unsupported:
INVALID_ARGUMENT: Only CONTINUE_ON_ERROR is supported for atomicity.

=========================================================================
WriteRequest test: empty
=========================================================================

--- PD (Input):

--- IR:

--- PI:


=========================================================================
WriteRequest test: missing updates
=========================================================================

--- PD (Input):
device_id: 134
election_id {
  high: 23413
  low: 2312
}

--- IR:
device_id: 134
election_id {
  high: 23413
  low: 2312
}

--- PI:
device_id: 134
election_id {
  high: 23413
  low: 2312
}


=========================================================================
WriteRequest test: valid ternary table update
=========================================================================

--- PD (Input):
device_id: 113
election_id {
  high: 1231
  low: 77989
}
updates {
  type: MODIFY
  table_entry {
    ternary_table {
      match {
        normal {
          value: "0x52"
          mask: "0x273"
        }
      }
      action {
        action3 {
          arg1: "0x23"
          arg2: "0x251"
        }
      }
      priority: 32
    }
  }
}

--- IR:
device_id: 113
election_id {
  high: 1231
  low: 77989
}
updates {
  type: MODIFY
  table_entry {
    table_name: "ternary_table"
    matches {
      name: "normal"
      ternary {
        value {
          hex_str: "0x52"
        }
        mask {
          hex_str: "0x273"
        }
      }
    }
    priority: 32
    action {
      name: "action3"
      params {
        name: "arg1"
        value {
          hex_str: "0x23"
        }
      }
      params {
        name: "arg2"
        value {
          hex_str: "0x251"
        }
      }
    }
  }
}

--- PI:
device_id: 113
election_id {
  high: 1231
  low: 77989
}
updates {
  type: MODIFY
  entity {
    table_entry {
      table_id: 33554435
      match {
        field_id: 1
        ternary {
          value: "R"
          mask: "\002s"
        }
      }
      action {
        action {
          action_id: 16777219
          params {
            param_id: 1
            value: "#"
          }
          params {
            param_id: 2
            value: "\002Q"
          }
        }
      }
      priority: 32
    }
  }
}


=========================================================================
WriteRequest test: multiple updates
=========================================================================

--- PD (Input):
device_id: 113
election_id {
  high: 1231
  low: 77989
}
updates {
  type: MODIFY
  table_entry {
    ternary_table {
      match {
        normal {
          value: "0x52"
          mask: "0x273"
        }
      }
      action {
        action3 {
          arg1: "0x23"
          arg2: "0x251"
        }
      }
      priority: 32
    }
  }
}
updates {
  type: DELETE
  table_entry {
    ternary_table {
      match {
        normal {
          value: "0x52"
          mask: "0x273"
        }
      }
      action {
        action3 {
          arg1: "0x23"
          arg2: "0x251"
        }
      }
      priority: 32
    }
  }
}

--- IR:
device_id: 113
election_id {
  high: 1231
  low: 77989
}
updates {
  type: MODIFY
  table_entry {
    table_name: "ternary_table"
    matches {
      name: "normal"
      ternary {
        value {
          hex_str: "0x52"
        }
        mask {
          hex_str: "0x273"
        }
      }
    }
    priority: 32
    action {
      name: "action3"
      params {
        name: "arg1"
        value {
          hex_str: "0x23"
        }
      }
      params {
        name: "arg2"
        value {
          hex_str: "0x251"
        }
      }
    }
  }
}
updates {
  type: DELETE
  table_entry {
    table_name: "ternary_table"
    matches {
      name: "normal"
      ternary {
        value {
          hex_str: "0x52"
        }
        mask {
          hex_str: "0x273"
        }
      }
    }
    priority: 32
    action {
      name: "action3"
      params {
        name: "arg1"
        value {
          hex_str: "0x23"
        }
      }
      params {
        name: "arg2"
        value {
          hex_str: "0x251"
        }
      }
    }
  }
}

--- PI:
device_id: 113
election_id {
  high: 1231
  low: 77989
}
updates {
  type: MODIFY
  entity {
    table_entry {
      table_id: 33554435
      match {
        field_id: 1
        ternary {
          value: "R"
          mask: "\002s"
        }
      }
      action {
        action {
          action_id: 16777219
          params {
            param_id: 1
            value: "#"
          }
          params {
            param_id: 2
            value: "\002Q"
          }
        }
      }
      priority: 32
    }
  }
}
updates {
  type: DELETE
  entity {
    table_entry {
      table_id: 33554435
      match {
        field_id: 1
        ternary {
          value: "R"
          mask: "\002s"
        }
      }
      action {
        action {
          action_id: 16777219
          params {
            param_id: 1
            value: "#"
          }
          params {
            param_id: 2
            value: "\002Q"
          }
        }
      }
      priority: 32
    }
  }
}


=========================================================================
gRPC WriteRpcStatus test: Grpc status has ok status with non empty message
=========================================================================

--- gRPC (Input):
gRPC_error_code: 0
gRPC_error_message: "message_string"
gRPC_error_details: <empty>
--- gRPC is invalid/unsupported:
gRPC status can not be ok and contain an error message or error details.

=========================================================================
gRPC WriteRpcStatus test: Invalid gRPC StatusCode
=========================================================================

--- gRPC (Input):
gRPC_error_code: 42
gRPC_error_message: "error_message"
gRPC_error_details: <empty>
--- gRPC is invalid/unsupported:
Invalid status code: 42 

=========================================================================
Ir WriteRpcStatus test: IR rpc_response has ok code but non empty message
=========================================================================

--- IR (Input):
rpc_response {
  statuses {
  }
  statuses {
  }
  statuses {
  }
  statuses {
    message: "error_message"
  }
  statuses {
    message: "error_message"
  }
}
--- IR is invalid/unsupported:
INVALID_ARGUMENT: OK status should not contain error message. 

=========================================================================
Ir WriteRpcStatus test: IR rpc_response has non ok status code but empty message
=========================================================================

--- IR (Input):
rpc_response {
  statuses {
  }
  statuses {
  }
  statuses {
  }
  statuses {
    code: UNKNOWN
  }
  statuses {
    code: UNKNOWN
  }
}
--- IR is invalid/unsupported:
INVALID_ARGUMENT: UpdateStatus with non-ok status must have error message. 

=========================================================================
Ir WriteRpcStatus test: IR rpc_wide_error has invalid code
=========================================================================

--- IR (Input):
rpc_wide_error {
  code: 42
  message: "invalid_code"
}
--- IR is invalid/unsupported:
INVALID_ARGUMENT: Invalid status code: 42 

=========================================================================
Ir WriteRpcStatus test: IR rpc_wide_error should not have ok status
=========================================================================

--- IR (Input):
rpc_wide_error {
  message: "ok_code"
}
--- IR is invalid/unsupported:
INVALID_ARGUMENT: IR rpc-wide error should not have ok status.

=========================================================================
Pd WriteRpcStatus Test: PD rpc_wide error has invalid code
=========================================================================

--- PD(input):
rpc_wide_error {
  code: 42
  message: "bad_code"
}

---IR:
rpc_wide_error {
  code: 42
  message: "bad_code"
}

---PD is invalid/unsupported(detected when translating IR to gRPC. Invalid status code: 42 


=========================================================================
Pd WriteRpcStatus Test: non-ok status with empty message should fail
=========================================================================

--- PD(input):
rpc_response {
  statuses {
  }
  statuses {
  }
  statuses {
  }
  statuses {
    message: "error_message"
  }
  statuses {
    message: "error_message"
  }
}

---PD is invalid/unsupported:
INVALID_ARGUMENT: OK status should not contain error message. 


=========================================================================
Pd WriteRpcStatus Test: non-ok status with empty message should fail
=========================================================================

--- PD(input):
rpc_response {
  statuses {
  }
  statuses {
  }
  statuses {
  }
  statuses {
  }
  statuses {
    code: UNKNOWN
  }
}

---PD is invalid/unsupported:
INVALID_ARGUMENT: UpdateStatus with non-ok status must have error message. 


=========================================================================
Pd WriteRpcStatus Test: all reads status ok
=========================================================================

--- PD(input):
rpc_response {
  statuses {
  }
  statuses {
  }
  statuses {
  }
  statuses {
  }
  statuses {
  }
}

---IR:
rpc_response {
  statuses {
  }
  statuses {
  }
  statuses {
  }
  statuses {
  }
  statuses {
  }
}

---gRPC Status:
gRPC_error_code: 0
gRPC_error_message: ""
gRPC_error_details: <empty>


=========================================================================
Pd WriteRpcStatus Test: rpc-wide error with ok status code
=========================================================================

--- PD(input):
rpc_wide_error {
  message: "code is ok"
}

---IR:
rpc_wide_error {
  message: "code is ok"
}

---PD is invalid/unsupported(detected when translating IR to gRPC. IR rpc-wide error should not have ok status.


=========================================================================
Pd WriteRpcStatus Test: rpc-wide error with invalid status code
=========================================================================

--- PD(input):
rpc_wide_error {
  code: 42
  message: "bad_code"
}

---IR:
rpc_wide_error {
  code: 42
  message: "bad_code"
}

---PD is invalid/unsupported(detected when translating IR to gRPC. Invalid status code: 42 


=========================================================================
Pd WriteRpcStatus Test: rpc-wide error with ABORTED status
=========================================================================

--- PD(input):
rpc_wide_error {
  code: 10
  message: "int value of ABORTED is 10"
}

---IR:
rpc_wide_error {
  code: 10
  message: "int value of ABORTED is 10"
}

---gRPC Status:
gRPC_error_code: 10
gRPC_error_message: "int value of ABORTED is 10"
gRPC_error_details: <empty>


